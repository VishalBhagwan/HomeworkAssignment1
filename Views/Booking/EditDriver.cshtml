@model HomeworkAssignment1.Models.Driver

@{
    ViewBag.Title = "Edit Driver";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Manage.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="management-card mx-auto" style="max-width: 700px;">
        <!-- Header at top of page-->
        <div class="text-center mb-4">
            <img src="~/Images/HLogo.jpg" alt="Logo" class="title-icon mb-2" />
            <h2>Edit Driver</h2>
            <hr />
        </div>

        @using (Html.BeginForm("SaveDriver", "Booking", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "editDriverForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.driverID)
            @Html.Hidden("isFromLocalStorage", true)

            <!-- Loads the image of the driver, and change be changed-->
            <div class="mb-3">
                <label class="form-label" for="driverImageFile">Driver Image</label>
                <input type="file" id="driverImageFile" class="form-control" accept="image/*" />
                @Html.HiddenFor(model => model.driverImage, new { id = "driverImage" })
                <div id="imagePreview" class="mt-2">
                    @if (!string.IsNullOrEmpty(Model.driverImage))
                    {
                        <img src="@Model.driverImage" class="img-thumbnail" />
                    }
                </div>
                @Html.ValidationMessageFor(model => model.driverImage, "", new { @class = "text-danger" })
            </div>

            <!-- Loads the first name of the driver, and change be changed-->
            <div class="mb-3">
                <label class="form-label" for="driverFirstName">First Name</label>
                @Html.TextBoxFor(model => model.driverFirstName, new { @class = "form-control", id = "driverFirstName" })
                @Html.ValidationMessageFor(model => model.driverFirstName, "", new { @class = "text-danger" })
            </div>

            <!-- Loads the last name of the driver, and change be changed-->
            <div class="mb-3">
                <label class="form-label" for="driverLastName">Last Name</label>
                @Html.TextBoxFor(model => model.driverLastName, new { @class = "form-control", id = "driverLastName" })
                @Html.ValidationMessageFor(model => model.driverLastName, "", new { @class = "text-danger" })
            </div>

            <!-- Loads the phone number of the driver, and change be changed-->
            <div class="mb-3">
                <label class="form-label" for="driverPhoneNumber">Phone Number</label>
                @Html.TextBoxFor(model => model.driverPhoneNumber, new { @class = "form-control", id = "driverPhoneNumber" })
                @Html.ValidationMessageFor(model => model.driverPhoneNumber, "", new { @class = "text-danger" })
            </div>

            <!-- Loads the service type of the driver, and change be changed-->
            <div class="mb-4">
                <label class="form-label" for="driverServiceType">Service Type</label>
                @Html.DropDownListFor(model => model.driverServiceType,
                    new SelectList(HomeworkAssignment1.Models.Services.serviceTypes),
                    "Select Service Type",
                    new { @class = "form-control", id = "driverServiceType" })
                @Html.ValidationMessageFor(model => model.driverServiceType, "", new { @class = "text-danger" })
            </div>

            <!-- Redirect to the manage page if driver is edited and saved successfully-->
            <div class="d-flex justify-content-between">
                <a href="@Url.Action("ManagePage")" class="btn btn-secondary rounded-pill px-4">
                    <i class="fas fa-times"></i> Cancel
                </a>
                <button type="submit" class="btn btn-primary rounded-pill px-4">
                    <i class="fas fa-save"></i> Save Changes
                </button>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.6/jquery.inputmask.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#driverPhoneNumber').inputmask('(999) 999-9999');

            //Gets the driver ID from the URL
            const urlParams = new URLSearchParams(window.location.search);
            const driverId = urlParams.get('id');

            //Loads the driver data from localStorage using the driver ID
            if (driverId) {
                const driverData = localStorage.getItem('driver_' + driverId);
                if (driverData) {
                    const fields = driverData.split('|');

                    //Populates the data into the form so it can be edited
                    $('#driverFirstName').val(fields[0]);
                    $('#driverLastName').val(fields[1]);
                    $('#driverPhoneNumber').val(fields[2]);
                    $('#driverServiceType').val(fields[3]);

                    //Loads the stored image if it exists
                    if (fields.length > 4 && fields[4]) {
                        $('#driverImage').val(fields[4]);
                        $('#imagePreview').html(`<img src="${fields[4]}" class="img-thumbnail" />`);
                    }
                }
            }

            //Changes the image if a new image is selected
            $('#driverImageFile').change(function () {
                const file = this.files[0];
                if (file) {
                    if (file.size > 500000) {
                        alert('Image size should be less than 500KB');
                        $(this).val('');
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').html(`<img src="${e.target.result}" class="img-thumbnail" />`);
                        $('#driverImage').val(e.target.result);
                    }
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
}