@model HomeworkAssignment1.Models.DriverVehicleModel

@{
    ViewBag.Title = "Booking Form";
    var serviceType = ViewBag.ServiceType as string;
    var vehiclesJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Vehicles);
    var driversJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Drivers);
}

<h2>@serviceType</h2>

<form id="bookingForm">
    <input type="hidden" id="serviceType" value="@serviceType" />
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="fullName">Full Name*</label>
                <input type="text" class="form-control" id="fullName" required>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="phone">Phone*</label>
                <input type="tel" class="form-control" id="phone" required>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="pickUpTime">Pick-Up Time*</label>
                <input type="time" class="form-control" id="pickUpTime" required>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="reason">Reason*</label>
                <input type="text" class="form-control" id="reason" required>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="vehicle">Vehicle*</label>
                <select class="form-control" id="vehicle" required>
                    <option value="">Select Vehicle</option>
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="driver">Driver*</label>
                <select class="form-control" id="driver" required>
                    <option value="">Select Driver</option>
                </select>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="pickUpAddress">Pick-Up Address</label>
        <textarea class="form-control" id="pickUpAddress" rows="3"></textarea>
    </div>

    <button type="submit" class="btn btn-primary">BOOK AMBULANCE</button>
</form>

@section scripts {
    <script>
        $(document).ready(function () {
            const vehicles = @Html.Raw(vehiclesJson); // Pass vehicles data to JavaScript
            const drivers = @Html.Raw(driversJson); // Pass drivers data to JavaScript

            // Populate vehicles
            const $vehicleSelect = $('#vehicle');
            vehicles.forEach(vehicle => {
                $vehicleSelect.append($('<option>', {
                    value: vehicle.vehicleID,
                    text: vehicle.vehicleType
                }));
            });

            // Populate drivers
            const $driverSelect = $('#driver');
            drivers.forEach(driver => {
                $driverSelect.append($('<option>', {
                    value: driver.driverID,
                    text: `${driver.driverFirstName} ${driver.driverLastName}`
                }));
            });

            // Form submission
            // Form submission
// Form submission
$('#bookingForm').submit(function(e) {
    e.preventDefault();

    const booking = {
        serviceType: $('#serviceType').val(),
        bookingID: generateGUID(), // Assuming you have a function to generate a GUID
        bookingFullName: $('#fullName').val(),
        bookingPhoneNumber: $('#phone').val(),
        bookingPickUp: $('#pickUpTime').val(),
        bookingReason: $('#reason').val(),
        vehicleID: $('#vehicle').val(),
        driverID: $('#driver').val(),
        bookingPickupAddress: $('#pickUpAddress').val(),
        bookingDate: new Date().toISOString(),
        isEmergency: false
    };

    // Store booking in local storage
    let bookings = JSON.parse(localStorage.getItem('bookings')) || [];
    bookings.push(booking);
    localStorage.setItem('bookings', JSON.stringify(bookings));

    // Store for confirmation view
    localStorage.setItem('currentBooking', JSON.stringify(booking));
    window.location.href = '@Url.Action("ConfirmBooking", "Booking")';
});



            // Function to generate a GUID (if you don't have one)
            function generateGUID() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        });
    </script>
}