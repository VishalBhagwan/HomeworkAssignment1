@{
    ViewBag.Title = "HomePage";
}
<head>
    <link href="~/Content/HomeStyle.css" rel="stylesheet" />
</head>

<div class="container-fluid">
    <!-- First row-->
    <div class="row">
        <!-- Top left -> Book ambulance content-->
        <div class="col-md-6 p-5 top-left-quadrant">
            <div class="text-center h-100 d-flex flex-column justify-content-center">
                <h1 class="display-4 mb-4">The best team try and save you</h1>
                <p class="h3 mb-5">If you're still breathing once you've reached the hospital, we've done our job</p>
                <a href="@Url.Action("SelectService", "Booking")" class="btn btn-primary btn-lg mx-auto" style="font-size: 2rem; padding: 1rem 2rem;">BOOK AMBULANCE</a>
            </div>
        </div>

        <!-- Top right -> Image-->
        <div class="col-md-6 p-0">
            <img src="~/Images/Hospital.jpg" alt="Ambulance" class="img-fluid w-100 h-100" style="object-fit: cover;">
        </div>
    </div>

    <!-- Second row-->
    <div class="row">
        <!-- Bottom left -> SOS button-->
        <div class="col-md-6 p-0">
            <button id="sosButton" class="btn p-0 border-0 w-100 h-100">
                <img src="~/Images/SOS.jpg" alt="Emergency SOS" class="img-fluid w-100 h-100" style="object-fit: cover;">
            </button>
        </div>

        <!-- Bottom right -> Text-->
        <div class="col-md-6 p-5 bottom-right-quadrant">
            <div class="h-100 d-flex flex-column justify-content-center">
                <h1 class="display-4 mb-4">EMERGENCY?</h1>
                <p class="h3">Only hit the button for <strong>real</strong> emergencies</p>
                <p class="h4 text-muted mt-4">Stepping on a thumbtack at 3 am while doing arts and crafts is not an emergency.</p>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            //S.O.S button click
            $("#sosButton").click(function(e) {
                e.preventDefault();

                //Gets service types from model
                const serviceTypes = [
                    @foreach (var service in HomeworkAssignment1.Models.Services.serviceTypes)
                    {
                        <text>'@service',</text>
                    }
                ];

                //Get available drivers and vehicles with images from local storage
                const availableDrivers = [];
                const availableVehicles = [];

                for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);

                    //Checks for drivers and gets their data
                    if (key.startsWith('driver_')) {
                        const driverData = localStorage.getItem(key).split('|');
                        if (driverData.length >= 4) {
                            const driver = {
                                driverID: key.replace('driver_', ''),
                                firstName: driverData[0],
                                lastName: driverData[1],
                                phone: driverData[2],
                                serviceType: driverData[3],
                                image: driverData.length > 4 ? driverData[4] : '/Content/images/default-driver.jpg'
                            };
                            availableDrivers.push(driver);
                        }
                    }

                    //Checks for vehicles and gets its data
                    if (key.startsWith('vehicle_')) {
                        const vehicleData = localStorage.getItem(key).split('|');
                        if (vehicleData.length >= 3) {
                            const vehicle = {
                                vehicleID: key.replace('vehicle_', ''),
                                vehicleType: vehicleData[0],
                                registration: vehicleData[1],
                                serviceType: vehicleData[2],
                                image: vehicleData.length > 3 ? vehicleData[3] : '/Content/images/default-vehicle.jpg'
                            };
                            availableVehicles.push(vehicle);
                        }
                    }
                }

                //Try each service type until we find one with an available driver and vehicle
                let selectedService = null;
                let serviceDrivers = [];
                let serviceVehicles = [];

                //Randomly select a service type and a driver & vehicle of the same service type
                const shuffledServices = [...serviceTypes].sort(() => 0.5 - Math.random());

                for (const service of shuffledServices) {
                    serviceDrivers = availableDrivers.filter(d => d.serviceType === service);
                    serviceVehicles = availableVehicles.filter(v => v.serviceType === service);

                    if (serviceDrivers.length > 0 && serviceVehicles.length > 0) {
                        selectedService = service;
                        break;
                    }
                }

                if (!selectedService) {
                    alert("No available drivers or vehicles for any service type");
                    return;
                }

                //Randomly select a driver and vehicle 
                const randomDriver = serviceDrivers[Math.floor(Math.random() * serviceDrivers.length)];
                const randomVehicle = serviceVehicles[Math.floor(Math.random() * serviceVehicles.length)];

                //Create booking object in local storage
                const bookingKey = 'emergency_' + Date.now();

                localStorage.setItem(bookingKey + '_serviceType', selectedService);
                localStorage.setItem(bookingKey + '_id', generateGUID());
                localStorage.setItem(bookingKey + '_fullName', 'EMERGENCY PATIENT');
                localStorage.setItem(bookingKey + '_phone', '000-000-0000');
                localStorage.setItem(bookingKey + '_pickUpTime', new Date().toLocaleTimeString());
                localStorage.setItem(bookingKey + '_reason', 'Emergency');
                localStorage.setItem(bookingKey + '_address', 'Emergency Location');
                localStorage.setItem(bookingKey + '_date', new Date().toISOString());
                localStorage.setItem(bookingKey + '_isEmergency', 'true');
                localStorage.setItem(bookingKey + '_driverId', randomDriver.driverID);
                localStorage.setItem(bookingKey + '_vehicleId', randomVehicle.vehicleID);

                //Store driver data
                localStorage.setItem(bookingKey + '_driverData',
                    `${randomDriver.firstName}|${randomDriver.lastName}|${randomDriver.phone}|${randomDriver.serviceType}|${randomDriver.image}`);
                localStorage.setItem(bookingKey + '_driverImage', randomDriver.image);

                //Store complete vehicle data
                localStorage.setItem(bookingKey + '_vehicleType', randomVehicle.vehicleType);
                localStorage.setItem(bookingKey + '_vehicleReg', randomVehicle.registration);
                localStorage.setItem(bookingKey + '_vehicleService', randomVehicle.serviceType);
                localStorage.setItem(bookingKey + '_vehicleImage', randomVehicle.image);

                //Add to bookings list
                let bookings = localStorage.getItem('bookingKeys') || '';
                if (bookings) bookings += ',';
                bookings += bookingKey;
                localStorage.setItem('bookingKeys', bookings);

                //Set as current booking
                localStorage.setItem('currentBookingKey', bookingKey);

                //Redirect to confirmation page if successful
                window.location.href = '@Url.Action("ConfirmBooking", "Booking")?bookingId=' + bookingKey;
            });

            //Generates a unique ID for each booking
            function generateGUID() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        });
    </script>
}