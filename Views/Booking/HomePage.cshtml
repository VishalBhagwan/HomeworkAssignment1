@{
    ViewBag.Title = "HomePage";
}

<div class="jumbotron">
    <h1>RescueBus</h1>
    <p class="lead">you're better off not dead</p>
</div>

<div class="row">
    <div class="col-md-12 text-center">
        <h2>A real O.K. team here to try and save you</h2>
        <p>If you're still breathing once you've reached the hospital, we've done our job successfully!</p>
        <a href="@Url.Action("SelectService", "Booking")" class="btn btn-primary">Book Ambulance</a>
    </div>
</div>

<div class="row mt-5">
    <div class="col-md-12 text-center">
        <h3>EMERGENCY?</h3>
        <p>Only hit the button for <strong>real</strong> emergencies mind you...</p>
        <button id="sosButton" class="btn btn-danger btn-lg">S.O.S</button>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // S.O.S button click handler
            $("#sosButton").click(function(e) {
                e.preventDefault();

                // Get service types from server
                const serviceTypes = @Html.Raw(Json.Encode(HomeworkAssignment1.Models.Services.serviceTypes));

                // Get drivers and vehicles from server
                const drivers = @Html.Raw(Json.Encode(HomeworkAssignment1.Models.Repository.GetDrivers()));
                const vehicles = @Html.Raw(Json.Encode(HomeworkAssignment1.Models.Repository.GetVehicles()));

                // Select random service type
                const randomService = serviceTypes[Math.floor(Math.random() * serviceTypes.length)];

                // Filter drivers and vehicles for selected service
                const availableDrivers = drivers.filter(d => d.driverServiceType === randomService);
                const availableVehicles = vehicles.filter(v => v.vehicleServiceType === randomService);

                if (availableDrivers.length === 0 || availableVehicles.length === 0) {
                    alert("No available drivers or vehicles for emergency service");
                    return;
                }

                // Select random driver and vehicle
                const randomDriver = availableDrivers[Math.floor(Math.random() * availableDrivers.length)];
                const randomVehicle = availableVehicles[Math.floor(Math.random() * availableVehicles.length)];

                // Create booking key
                const bookingKey = 'emergency_' + Date.now();

                // Store booking data in localStorage
                localStorage.setItem(bookingKey + '_serviceType', randomService);
                localStorage.setItem(bookingKey + '_id', 'EMG-' + Math.floor(Math.random() * 10000));
                localStorage.setItem(bookingKey + '_fullName', 'EMERGENCY PATIENT');
                localStorage.setItem(bookingKey + '_phone', '000-000-0000');
                localStorage.setItem(bookingKey + '_pickUpTime', new Date().toLocaleTimeString());
                localStorage.setItem(bookingKey + '_reason', 'Emergency');
                localStorage.setItem(bookingKey + '_address', 'Emergency Location');
                localStorage.setItem(bookingKey + '_date', new Date().toISOString());
                localStorage.setItem(bookingKey + '_isEmergency', 'true');
                localStorage.setItem(bookingKey + '_driverId', randomDriver.driverID);
                localStorage.setItem(bookingKey + '_vehicleId', randomVehicle.vehicleID);

                // Store driver details
                localStorage.setItem(bookingKey + '_driverFirstName', randomDriver.driverFirstName);
                localStorage.setItem(bookingKey + '_driverLastName', randomDriver.driverLastName);
                localStorage.setItem(bookingKey + '_driverPhone', randomDriver.driverPhoneNumber);
                localStorage.setItem(bookingKey + '_driverService', randomDriver.driverServiceType);

                // Store vehicle details
                localStorage.setItem(bookingKey + '_vehicleType', randomVehicle.vehicleType);
                localStorage.setItem(bookingKey + '_vehicleReg', randomVehicle.vehicleRegistration);
                localStorage.setItem(bookingKey + '_vehicleService', randomVehicle.vehicleServiceType);

                // Add to bookings list
                let bookings = localStorage.getItem('bookingKeys') || '';
                if (bookings) bookings += ',';
                bookings += bookingKey;
                localStorage.setItem('bookingKeys', bookings);

                // Set as current booking
                localStorage.setItem('currentBookingKey', bookingKey);

                // Add to repository via AJAX
                $.post('@Url.Action("EmergencyBooking", "Booking")', {
                    serviceType: randomService,
                    driverId: randomDriver.driverID,
                    vehicleId: randomVehicle.vehicleID
                }, function() {
                    // Redirect to confirmation page
                    window.location.href = '@Url.Action("ConfirmBooking", "Booking")';
                });
            });
        });
    </script>
}