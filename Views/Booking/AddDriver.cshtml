@model HomeworkAssignment1.Models.Driver
<!-- Uses variables from the Driver model -->
<!-- -->
@{
    ViewBag.Title = "Add New Driver";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/Content/Manage.css" rel="stylesheet" />
</head>


<div class="container mt-5">
    <div class="management-card mx-auto" style="max-width: 700px;">
        <div class="text-center mb-4">
            <h2>Add New Driver</h2>
            <hr />
        </div>

        @using (Html.BeginForm("AddDriver", "Booking", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <!-- Where the driver image is uploaded and can be previewed-->
            <div class="mb-3">
                <label class="form-label" for="driverImageFile">Driver Image</label>
                <input type="file" id="driverImageFile" class="form-control" accept="image/*" />
                @Html.HiddenFor(model => model.driverImage)
                <div id="imagePreview" class="mt-2"></div>
                @Html.ValidationMessageFor(model => model.driverImage, "", new { @class = "text-danger" })
            </div>

            <!-- Where the driver first name is entered-->
            <div class="mb-3">
                <label class="form-label" for="driverFirstName">First Name</label>
                @Html.TextBoxFor(model => model.driverFirstName, new { @class = "form-control", id = "driverFirstName", placeholder = "Enter first name" })
                @Html.ValidationMessageFor(model => model.driverFirstName, "", new { @class = "text-danger" })
            </div>

            <!-- Where the driver last name is entered-->
            <div class="mb-3">
                <label class="form-label" for="driverLastName">Last Name</label>
                @Html.TextBoxFor(model => model.driverLastName, new { @class = "form-control", id = "driverLastName", placeholder = "Enter last name" })
                @Html.ValidationMessageFor(model => model.driverLastName, "", new { @class = "text-danger" })
            </div>

            <!-- Where the driver phone number is entered-->
            <div class="mb-3">
                <label class="form-label" for="driverPhoneNumber">Phone Number</label>
                @Html.TextBoxFor(model => model.driverPhoneNumber, new { @class = "form-control", id = "driverPhoneNumber", placeholder = "(123) 456-7890" })
                @Html.ValidationMessageFor(model => model.driverPhoneNumber, "", new { @class = "text-danger" })
            </div>

            <!-- Where the driver service type is selected-->
            <div class="mb-4">
                <label class="form-label" for="driverServiceType">Service Type</label>
                @Html.DropDownListFor(model => model.driverServiceType,
                    new SelectList(HomeworkAssignment1.Models.Services.serviceTypes),
                    "Select Service Type",
                    new { @class = "form-control", id = "driverServiceType" })
                @Html.ValidationMessageFor(model => model.driverServiceType, "", new { @class = "text-danger" })
            </div>

            <!-- Redirect to the manage page once driver added successfully-->
            <div class="d-flex justify-content-between">
                <a href="@Url.Action("ManagePage", "Booking")" class="btn btn-secondary rounded-pill px-4">
                    <i class="fas fa-times"></i> Cancel
                </a>
                <button type="submit" class="btn btn-success rounded-pill px-4">
                    <i class="fas fa-user-plus"></i> Add Driver
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.6/jquery.inputmask.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#driverPhoneNumber').inputmask('(999) 999-9999');

            //Loads the image selected by the user
            $('#driverImageFile').change(function () {
                const file = this.files[0];
                if (file) {
                    //When a user select an image, makes sure it is under 500kb
                    if (file.size > 500000) {
                        alert('Image size should be less than 500KB');
                        $(this).val('');
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imagePreview').html(`<img src="${e.target.result}" style="width: 80px; height: 80px; object-fit: cover; border-radius: 6px;" />`);
                        $('#driverImage').val(e.target.result);
                    };
                    reader.readAsDataURL(file);
                } else {
                    $('#imagePreview').html('');
                    $('#driverImage').val('');
                }
            });
        });
    </script>
}
