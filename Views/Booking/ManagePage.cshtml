@model HomeworkAssignment1.Models.Manage

@{
    ViewBag.Title = "Manage Drivers and Vehicles";
}



<h2>Driver and Vehicle Management</h2>

<div class="row">
    <div class="col-md-6">
        <h3>Drivers</h3>
        <div class="input-group mb-3">
            <input type="text" id="driverSearch" class="form-control" placeholder="Search by name">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" id="searchDriversBtn">Search</button>
            </div>
        </div>

        <table class="table" id="driversTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Phone</th>
                    <th>Service</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="driversList">
                <!-- Will be populated by jQuery -->
            </tbody>
        </table>

        <a href="@Url.Action("AddDriver", "Booking")" class="btn btn-primary">Add Driver</a>
    </div>
</div>

@section scripts {
    <!-- Add these if not already in your layout -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            // Load initial data
            loadDrivers();

            // Set up event handlers
            $('#saveDriverBtn').click(saveDriver);
            $('#searchDriversBtn').click(searchDrivers);



            // Use event delegation for dynamically added buttons
            $(document).on('click', '.edit-driver', function () {
                var driverId = $(this).data('id');
                editDriver(driverId);
            });

            $(document).on('click', '.delete-driver', function () {
                var driverId = $(this).data('id');
                deleteDriver(driverId);
            });


        });

        function loadDrivers() {
    $('#driversList').empty();

    // First load from Repository
    @foreach (var driver in HomeworkAssignment1.Models.Repository.GetDrivers())
    {
        <text>
        addDriverRow('@driver.driverID', '@driver.driverFirstName', '@driver.driverLastName',
                    '@driver.driverPhoneNumber', '@driver.driverServiceType');
        </text>
    }

    // Then check localStorage for additional drivers
    for (var i = 0; i < localStorage.length; i++) {
        var key = localStorage.key(i);
        if (key.startsWith('driver_') && !key.includes('|')) {
            var driverId = key.replace('driver_', '');
            var driverData = localStorage.getItem(key).split('|');
            if (driverData.length === 4) {
                addDriverRow(driverId, driverData[0], driverData[1], driverData[2], driverData[3]);
            }
        }
    }
}

        function addDriverRow(id, firstName, lastName, phone, service) {
            // Only add if all fields have values
            if (firstName && lastName && phone && service) {
                $('#driversList').append(
                    '<tr>' +
                    '<td>' + firstName + ' ' + lastName + '</td>' +
                    '<td>' + phone + '</td>' +
                    '<td>' + service + '</td>' +
                    '<td>' +
                    '<a href="@Url.Action("EditDriver", "Booking")" class="btn btn-primary">Edit</a>' +
                    '<button class="btn btn-sm btn-danger delete-driver" data-id="' + id + '">Delete</button>' +
                    '</td>' +
                    '</tr>'
                );
            }
        }

        // Rest of your functions remain the same...
        function saveDriver() {
            var driverId = $('#driverID').val() || Date.now().toString();
            var driverData = [
                $('#driverFirstName').val(),
                $('#driverLastName').val(),
                $('#driverPhone').val(),
                $('#driverService').val()
            ].join('|');

            if (driverData.split('|').every(field => field.trim() !== '')) {
                // Save to localStorage
                localStorage.setItem('driver_' + driverId, driverData);

                // Update Repository
                var driver = {
                    driverID: driverId,
                    driverFirstName: $('#driverFirstName').val(),
                    driverLastName: $('#driverLastName').val(),
                    driverPhoneNumber: $('#driverPhone').val(),
                    driverServiceType: $('#driverService').val(),
                    driverImage: ""
                };

                if ($('#driverID').val()) {
                    Repository.UpdateDriver(driver);
                } else {
                    Repository.AddDriver(driver);
                }

                // Close the modal
                $('#driverModal').modal('hide');

                // Clear the form
                $('#driverForm')[0].reset();

                // Refresh the drivers list
                loadDrivers();

                // Show success message
                alert('Driver saved successfully!');
            } else {
                alert('Please fill in all fields');
            }
        }

        function editDriver(driverId) {
            var driverData = localStorage.getItem('driver_' + driverId);

            if (!driverData) {
                var driver = Repository.GetDriver(driverId);
                if (driver) {
                    driverData = [
                        driver.driverFirstName,
                        driver.driverLastName,
                        driver.driverPhoneNumber,
                        driver.driverServiceType
                    ].join('|');
                }
            }

            if (driverData) {
                var fields = driverData.split('|');
                $('#driverID').val(driverId);
                $('#driverFirstName').val(fields[0]);
                $('#driverLastName').val(fields[1]);
                $('#driverPhone').val(fields[2]);
                $('#driverService').val(fields[3]);

                $('#driverModalTitle').text('Edit Driver');
                $('#driverModal').modal('show');
            }
        }

        function deleteDriver(driverId) {
            if (confirm('Are you sure you want to delete this driver?')) {
                localStorage.removeItem('driver_' + driverId);
                Repository.DeleteDriver(driverId);
                loadDrivers();
            }
        }

        function searchDrivers() {
            var searchTerm = $('#driverSearch').val().toLowerCase();
            $('#driversList tr').each(function () {
                var driverName = $(this).find('td:first').text().toLowerCase();
                $(this).toggle(driverName.includes(searchTerm));
            });
        }
    </script>
}