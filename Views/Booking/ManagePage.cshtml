@{
    ViewBag.Title = "Manage Drivers and Vehicles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/Content/Manage.css" rel="stylesheet" />
</head>


<div class="management-container">
    <div class="management-title text-center mb-3">
        <img src="~/Images/HLogo.jpg" alt="Management Icon" class="title-icon mb-2" />
        <h2>Driver and Vehicle Management</h2>
    </div>

    <!-- TempData passes the temporary data from the controller after it adds, updates or deletes data to JavaScript to be stored in localStorage-->
    @if (TempData["DriverAdded"] != null && (bool)TempData["DriverAdded"])
    {
        <script>
        var driverData = '@TempData["NewDriver"]'.split('|');
        var driverId = driverData[0];
        var driverDetails = driverData.slice(1).join('|');
        localStorage.setItem('driver_' + driverId, driverDetails);
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    @if (TempData["DriverUpdated"] != null && (bool)TempData["DriverUpdated"])
    {
        <script>
        var driverData = '@TempData["UpdatedDriver"]'.split('|');
        var driverId = driverData[0];
        var driverDetails = driverData.slice(1).join('|');
        localStorage.setItem('driver_' + driverId, driverDetails);
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    @if (TempData["DriverDeleted"] != null)
    {
        <script>
        localStorage.removeItem('driver_' + '@TempData["DriverDeleted"]');
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    @if (TempData["VehicleAdded"] != null && (bool)TempData["VehicleAdded"])
    {
        <script>
        var vehicleData = '@TempData["NewVehicle"]'.split('|');
        var vehicleId = vehicleData[0];
        var vehicleDetails = vehicleData.slice(1).join('|');
        localStorage.setItem('vehicle_' + vehicleId, vehicleDetails);
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    @if (TempData["VehicleUpdated"] != null && (bool)TempData["VehicleUpdated"])
    {
        <script>
        var vehicleData = '@TempData["UpdatedVehicle"]'.split('|');
        var vehicleId = vehicleData[0];
        var vehicleDetails = vehicleData.slice(1).join('|');
        localStorage.setItem('vehicle_' + vehicleId, vehicleDetails);
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    @if (TempData["VehicleDeleted"] != null)
    {
        <script>
        localStorage.removeItem('vehicle_' + '@TempData["VehicleDeleted"]');
        window.location.href = '@Url.Action("ManagePage")';
        </script>
    }

    <div class="management-card">
        <!-- Opens up the AddDriver view-->
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Drivers</h3>
            <a href="@Url.Action("AddDriver", "Booking")" class="btn btn-primary">Add Driver</a>
        </div>

        <!-- Filters the data-->
        <div class="search-filter-container d-flex gap-3 mb-4 flex-wrap">
            <div class="input-group" style="width: 300px;">
                <input type="text" id="driverSearch" class="form-control" placeholder="Search by name">
                <button class="btn btn-outline-secondary" id="searchDriversBtn">Search</button>
            </div>

            <div class="input-group" style="width: 300px;">
                <select class="form-control" id="serviceTypeFilter">
                    <option value="">All Service Types</option>
                    @foreach (var service in HomeworkAssignment1.Models.Services.serviceTypes)
                    {
                        <option value="@service">@service</option>
                    }
                </select>
            </div>
        </div>

        <!-- Table where the driver data is stored-->
        <div class="card-row header bg-light rounded-top">
            <div>IMAGE</div>
            <div>FIRST NAME</div>
            <div>LAST NAME</div>
            <div>PHONE NUMBER</div>
            <div>SERVICE</div>
            <div class="text-center">Controls</div>
        </div>

        <div id="driversList">
            <!-- Populated by JavaScript -->
        </div>
    </div>

    <div class="management-card">
        <!-- Opens up the AddVehicle view-->
        <div class="card-header">
            <h3>Vehicles</h3>
            <a href="@Url.Action("AddVehicle", "Booking")" class="btn btn-primary">Add Vehicle</a>
        </div>

        <!-- Table where the vehicle data is stored-->
        <div class="card-row header bg-light rounded-top">
            <div>IMAGE</div>
            <div>TYPE</div>
            <div>REGISTRATION</div>
            <div>SERVICE</div>
            <div class="text-center">CONTROLS</div>
        </div>


        <div id="vehiclesList">
            <!-- Populated by JavaScript -->
        </div>

        <div class="text-end mt-3">
            <button id="exportVehiclesBtn" class="btn btn-success">Export Vehicles</button>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            //Populates the tables
            loadDrivers();
            loadVehicles();

            //Search functionality for drivers
            $('#searchDriversBtn').click(searchDrivers);
            
            //Filter by service type when specific service type is selected
            $('#serviceTypeFilter').change(filterByServiceType);

            //Driver button handlers
            //Opens the EditDriver page, and uses the driver ID to know what data to load
            $(document).on('click', '.edit-driver', function(e) {
                e.preventDefault();
                var driverId = $(this).data('id');
                window.location.href = '@Url.Action("EditDriver")?id=' + driverId + '&fromLocal=true';
            });

            //Deletes the driver, and uses the driver ID to know what data to delete
            $(document).on('click', '.delete-driver', function() {
                var driverId = $(this).data('id');

                if (confirm('Are you sure you want to delete this driver?')) {
                    localStorage.removeItem('driver_' + driverId);
                    loadDrivers();
                }
            });

            //Vehicle button handlers
            //Opens the EditVehicle page, and uses the driver ID to know what data to load
            $(document).on('click', '.edit-vehicle', function(e) {
                e.preventDefault();
                var vehicleId = $(this).data('id');
                window.location.href = '@Url.Action("EditVehicle")?id=' + vehicleId + '&fromLocal=true';
            });

            //Deletes the vehicle, and uses the vehicle ID to know what data to delete
            $(document).on('click', '.delete-vehicle', function() {
                var vehicleId = $(this).data('id');

                if (confirm('Are you sure you want to delete this vehicle?')) {
                    localStorage.removeItem('vehicle_' + vehicleId);
                    loadVehicles();
                }
            });
        });

        function loadDrivers() {
            $('#driversList').empty();

            //Loops through localStorage and populates the driver list
            for (var i = 0; i < localStorage.length; i++) {
                var key = localStorage.key(i);
                if (key.startsWith('driver_')) {
                    var driverId = key.replace('driver_', '');
                    var driverData = localStorage.getItem(key).split('|');
                    if (driverData.length >= 4) {
                        var image = driverData.length > 4 ? driverData[4] : null;
                        //Adds the driver to the table
                        addDriverRow(
                            driverId,
                            driverData[0],
                            driverData[1],
                            driverData[2],
                            driverData[3],
                            image
                        );
                    }
                }
            }
        }

        function loadVehicles() {
            $('#vehiclesList').empty();

            //Loops through localStorage and populates the driver list
            for (var i = 0; i < localStorage.length; i++) {
                var key = localStorage.key(i);
                if (key.startsWith('vehicle_')) {
                    var vehicleId = key.replace('vehicle_', '');
                    var vehicleData = localStorage.getItem(key).split('|');
                    if (vehicleData.length >= 3) {
                        var image = vehicleData.length > 3 ? vehicleData[3] : null;
                        //Adds the vehicle to the table
                        addVehicleRow(
                            vehicleId,
                            vehicleData[0],
                            vehicleData[1],
                            vehicleData[2],
                            image
                        );
                    }
                }
            }
        }

        //Adds drivers to the table list for each row
        function addDriverRow(id, firstName, lastName, phone, service, image) {
            const imageHtml = image
                ? `<img src="${image}" alt="Driver Image" />`
                : '<div class="text-muted">No image</div>';

            $('#driversList').append(`
                <div class="card-row" data-service="${service}">
                    <div>${imageHtml}</div>
                    <div>${firstName}</div>
                    <div>${lastName}</div>
                    <div>${phone}</div>
                    <div>${service}</div>
                    <div class="text-center">
                        <button class="btn edit-driver" data-id="${id}">Edit</button>
                        <button class="btn delete-driver" data-id="${id}">Delete</button>
                    </div>
                </div>
            `);
        }

        //Adds vehicles to the table list for each row
        function addVehicleRow(id, type, registration, service, image) {
            const imageHtml = image
                ? `<img src="${image}" alt="Vehicle Image" class="vehicle-thumbnail" />`
                : '<div class="text-muted">No image</div>';

            $('#vehiclesList').append(`
                <div class="card-row" data-service="${service}">
                <div>${imageHtml}</div>
                <div>${type}</div>
                <div>${registration}</div>
                <div>${service}</div>
                <div class="text-center">
                    <button class="btn edit-vehicle" data-id="${id}">Edit</button>
                    <button class="btn delete-vehicle" data-id="${id}">Delete</button>
                </div>
            </div>
        `);
        }


        //Filters through driver full name and display any matches
        function searchDrivers() {
            var searchTerm = $('#driverSearch').val().toLowerCase();
            $('#driversList .card-row').each(function () {
                var firstName = $(this).children().eq(1).text().toLowerCase();
                var lastName = $(this).children().eq(2).text().toLowerCase();
                var fullName = firstName + ' ' + lastName;
                $(this).toggle(fullName.includes(searchTerm));
            });
        }

        //Only show drivers which match the service type
        function filterByServiceType() {
            var selectedService = $('#serviceTypeFilter').val();
            if (!selectedService) {
                $('#driversList .card-row').show(); //Show all if there is no filter
                return;
            }

            $('#driversList .card-row').each(function () {
                var serviceType = $(this).data('service');
                $(this).toggle(serviceType === selectedService);
            });
        }

        //Export to a text file
        $('#exportVehiclesBtn').click(function () {
            //Defines the columns
            let content = 'ID\tType\tRegistration\tService\n';

            //Loops through local storage
            for (let i = 0; i < localStorage.length; i++) {
                let key = localStorage.key(i);
                if (key.startsWith('vehicle_')) {
                    //Removes the vehicle_ so that it can get the data by itself
                    let vehicleId = key.replace('vehicle_', '');
                    let vehicleData = localStorage.getItem(key).split('|');
                    if (vehicleData.length >= 3) {
                        const [type, registration, service] = vehicleData;
                        content += `${vehicleId}\t${type}\t${registration}\t${service}\n`;
                    }
                }
            }

            //Uses Blob to store like a file in memory
            const blob = new Blob([content], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            //Creates a download link
            const a = document.createElement('a');
            a.href = url;
            a.download = 'vehicles.txt';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        });

    </script>
}